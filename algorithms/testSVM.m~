% This script tests an SVM with different settings
 
%% mix up data
% origExamples = trainingExamples;
% origTargets = targets;
% switcharoo = randperm(length(targets));
% trainingExamples = origExamples(switcharoo,:);
% targets = origTargets(switcharoo);

N = floor(0.7*length(targets)); % number of training examples to use


%% Split data into training/validation and testing

N=floor(0.7*length(targets)); %1:N
M=floor(0.8*length(targets));

train_data = data(1:training_portion,:);
train_labels = targets(1:training_portion);

test_data = data(training_portion+1:end, :);
test_labels = targets(training_portion+1: end);

% default cross-val = 10;
% 'linear', 'gaussian' , 'polynomial' with 'PolynomialOrder' (default=3)
%% Train various SVM models
SVM1 = fitcsvm(trainingExamples(1:Ntrain,:),targets(1:N),'KernelFunction','linear');
disp('done model #1')
%SVM2 = fitcsvm(trainingExamples(1:N,:),targets(1:N),'CrossVal','on','KFold',7,'KernelFunction','gaussian'); 
%disp('done model #1')
%SVM3 = fitcsvm(trainingExamples(1:N,:),targets(1:N),'CrossVal','on','KFold',7,'KernelFunction','polynomial','PolynomialOrder',2);
%disp('done model #3')
%SVM4 = fitcsvm(trainingExamples(1:N,:),targets(1:N),'CrossVal','on','KFold',7,'KernelFunction','polynomial','PolynomialOrder',3);
%disp('done model #4')
%SVM5 = fitcsvm(trainingExamples(1:N,:),targets(1:N),'CrossVal','on','KFold',7,'KernelFunction','polynomial','PolynomialOrder',4);
%disp('done model #5')

%% Validate
[label1,score1] = predict(SVM1,trainingExamples(N+1:end,:));
% [label2,score2] = predict(SVM2,trainingExamples(N+1:end,:));
% [label3,score3] = predict(SVM3,trainingExamples(N+1:end,:));
% [label4,score4] = predict(SVM4,trainingExamples(N+1:end,:));
% [label5,score5] = predict(SVM5,trainingExamples(N+1:end,:));
error1 = sum(abs(label1-targets(N+1:end)))/length(targets(N+1:end));
% error2 = sum(abs(label2-targets(N+1:end)))/length(targets(N+1:end));
% error3 = sum(abs(label3-targets(N+1:end)))/length(targets(N+1:end));
% error4 = sum(abs(label4-targets(N+1:end)))/length(targets(N+1:end));
% error5 = sum(abs(label5-targets(N+1:end)))/length(targets(N+1:end));